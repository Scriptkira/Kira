import re
import long_responses as long

def message_probablilty(user_message, recognised_words, single_response=False, required_word=[]):
    message_certainty = 0
    has_required_word = True

    for word in user_message:
        if word in recognised_words:
            message_certainty += 1
    #calculate the percent of recognised words in a user message
    percentage = float(message_certainty) / float(len(recognised_words))
    for word in required_word:
        if word not in user_message:
            has_required_word = False
            break

    if has_required_word or single_response:
        return int(percentage*100)
    else:
        return 0

def check_all_messages(message):
    highest_prob_list ={}

    def response(bot_response, list_of_words, single_response=False, required_word=[]):
        nonlocal highest_prob_list
        highest_prob_list[bot_response] = message_probablilty(message, list_of_words, single_response, required_word)

    #response--------------------------------------------
    response('Hello!', ['hello', 'hi', 'sup', 'hey', 'heyo'], single_response=True)
    response('I\'m doing fine, and you?', ['how', 'are', 'you', 'doing'], required_word=['how'])
    response('Thankyou', ['i', 'love', 'script', 'kira'], required_word=['script', 'kira'])

    response(long.R_EATING, ['what', 'you', 'eat'], required_word=['you', 'eat'])

    best_match = max(highest_prob_list, key=highest_prob_list)
    #print(highest_prob_list)

    return long.unknown() if highest_prob_list[best_match]< 1 else best_match

    return best_match
def get_respose(user_input):
    split_message = re.split('r\s+|[,;?!.-]\s*', user_input.lower())
    response = check_all_messages(split_message)
    return response


# testing the respose system
while True:
    print('bot ' +  get_respose(input('you: ')))
